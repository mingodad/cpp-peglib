#From: https://github.com/dpranke/glop/blob/c685b6f08364b38f244ea25b3bc8e0894e50c9a1/grammars/json5.g

grammar      <- ws value ws end

~ws           <- (' ' / '\t' / comment / eol)*

eol          <- '\r\n' / '\r' / '\n'

comment      <- '//' (!(eol/end) .)* (end/eol)
             / '/*' (!'*/' .)* '*/'

value        <- 'null'
             / 'true'
             / 'false'
             / object
             / array
             / string
             / num_literal

object       <- '{' ws member_list ws '}'
             / '{' ws '}'

array        <- '[' ws element_list ws ']'
             / '[' ws ']'

string       <- <squote (!squote qchar)* squote>
             / <dquote (!dquote qchar)* dquote>

squote       <- '\''

dquote       <- '"'

qchar        <- '\''
             / '\"'
             / .

element_list <- value ws ',' ws element_list
             / value ws ','
             / value

member_list  <- member ws ',' ws member_list
             / member ws ','
             / member

member       <- string ws ':' ws value
             / ident ws ':' ws value

ident        <- <ident_start (letter/digit)*>

ident_start  <- (letter/'$'/'_')

num_literal  <- dec_literal !(ident_start/digit)
             / hex_literal

dec_literal  <- <dec_int_lit frac exp
             / dec_int_lit frac
             / dec_int_lit exp
             / dec_int_lit
             / frac exp
             / frac>

dec_int_lit  <- '0' !digit
             / nonzerodigit digit*

nonzerodigit <- [1-9]

hex_literal  <- <'0x'i hex_digit hex_digit
             / '0x'i hex_digit>


hex_digit    <- ([A-Fa-f] / digit)

frac         <- '.' digit*

exp          <- [eE] [+-] digit*
             / [eE] digit*

digit <- [0-9]
letter <- [A-Za-z]
end <- !.
