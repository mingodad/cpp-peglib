#From: https://github.com/waxeye-org/waxeye/blob/723da0475fc0c8e3dd43da46665ef7c62734857b/grammars/waxeye.waxeye
# The Waxeye grammar language.

Grammar     <- Ws Definition*


Definition  <- Identifier (LeftArrow / PruneArrow / VoidArrow) Alternation Ws


Alternation <- Sequence (Alt Sequence)*


Sequence    <- Unit+


Unit        <- (Prefix / Label)*
               ( Identifier !(LeftArrow / PruneArrow / VoidArrow)
               / Open Alternation Close
               / Action
               / Literal
               / CaseLiteral
               / CharClass
               / WildCard )


Prefix      <- [?*+:&!] Ws


Label       <- Identifier Ws '=' Ws


Action      <- '@' Identifier ('<' Ws Identifier (Comma Identifier)* '>')? Ws


Identifier  <- <[a-zA-Z_] [a-zA-Z0-9_-]*> Ws


Literal     <- <['] (!['] (LChar / Hex))+ [']> Ws


CaseLiteral <- <["] (!["] (LChar / Hex))+ ["]> Ws


LChar       <- '\\' [nrt'"\\] / !'\\' !EndOfLine .


CharClass   <- <'[' (!']' Range)* ']'> Ws


Range       <- (Char / Hex) ('-' (Char / Hex))?


Char        <- '\\' [-nrt\]\\] / !'\\' !']' !EndOfLine .


Hex         <- '\\u{' [0-9A-Fa-f] [0-9A-Fa-f]? [0-9A-Fa-f]? [0-9A-Fa-f]? [0-9A-Fa-f]? [0-9A-Fa-f]? '}'


WildCard    <- '.' Ws


LeftArrow   <- '<-' Ws


PruneArrow  <- '<=' Ws


VoidArrow   <- '<:' Ws


#################
# Always voided #
#################

Alt          <- '|' Ws


Open         <- '(' Ws


Close        <- ')' Ws


Comma        <- ',' Ws


SComment     <- '#' (!EndOfLine .)* (EndOfLine / !.)


MComment     <- '/*' (MComment / !'*/' . )* '*/'


EndOfLine    <- '\r\n' / '\n' / '\r'


~Ws           <- ([ \t] / EndOfLine / SComment / MComment)*